; vim:set filetype=scheme foldmethod=marker:

; 基本的な関数{{{
; 関数 cxxr
(define cadr (lambda (x) (car (cdr x))))
(define cdar (lambda (x) (cdr (car x))))
(define caar (lambda (x) (car (car x))))
(define cddr (lambda (x) (cdr (cdr x))))


(define-macro cond
  (lambda args
    (if (null? args)
        '*undef*
      (if (eq? (caar args) 'else)
          `(begin ,@(cdar args))
        (if (null? (cdar args))
            `(let ((+value+ ,(caar args)))
              (if +value+ +value+ (cond ,@(cdr args))))
          `(if ,(caar args)
               (begin ,@(cdar args))
            (cond ,@(cdr args))))))))

(define (assq x y)
  (cond ((null? y) nil)
		((eq? x (caar y)) (car y))
		(#t (assoc x (cdr y))) ))

(define (assoc x y)
  (cond ((null? y) nil)
		((equal? x (caar y)) (car y))
		(#t (assoc x (cdr y))) ))

(define (filter predicate ls)
  (cond ((null? ls) nil)
		((predicate (car ls))
		 (cons (car ls) (filter predicate (cdr ls))))
		(else
		  (filter predicate (cdr ls)))))
;}}}

(cond
  ((windows?) (set-default-font "tahoma" 10))
  ((osx?) (set-default-font "Monaco")))

(set-window-size 1100 600)
(set-window-title "pyfiler")

(define-key normal-map "d" 'tabclose)
(define-key normal-map "g" 'cursor-first)
(define-key normal-map "h" 'cd-parent)
(define-key normal-map "j" 'cursor-down)
(define-key normal-map "k" 'cursor-up)
(define-key normal-map "l" 'cd-or-exec)
(define-key normal-map "C-l" 'tabnext)
(define-key normal-map "C-h" 'tabprev)
(define-key normal-map "r" 'reload-view)
(define-key normal-map "t" 'tabnew)

(define-key normal-map "a" 'select-all)
(define-key normal-map "S-g" 'cursor-last)
(define-key normal-map "S-r" 'reload-config)
(define-key normal-map "S-Space" 'select-up)
(define-key normal-map "Space" 'select-down)
(define-key normal-map "Tab" 'change-focus)
(define-key normal-map "S-Return" 'open-assoc)
(define-key normal-map "S-h" 'popd)

;(define (gt4? x) (> (length (get-file-state "filename" x)) 4))
;(set-filter gt4?)
